// <copyright file="PostQuotationPartHeaderCreate.cs" company="">
// Copyright (c) 2017 All Rights Reserved
// </copyright>
// <author></author>
// <date>12/21/2017 10:07:25 AM</date>
// <summary>Implements the PostQuotationPartHeaderCreate Plugin.</summary>
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
// </auto-generated>
namespace TrakNusSparepartSystem.Plugins
{
    using System;
    using System.ServiceModel;
    using Microsoft.Xrm.Sdk;
    using TrakNusSparepartSystem.Plugins.BusinessLayer;
    using Microsoft.Xrm.Sdk.Query;

    /// <summary>
    /// PostQuotationPartHeaderCreate Plugin.
    /// </summary>    
    public class PostQuotationPartHeaderCreate: Plugin
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PostQuotationPartHeaderCreate"/> class.
        /// </summary>
        /// 
        private readonly string postImageAlias = "PostImage";

        public PostQuotationPartHeaderCreate()
            : base(typeof(PostQuotationPartHeaderCreate))
        {
            base.RegisteredEvents.Add(new Tuple<int, string, string, Action<LocalPluginContext>>(40, "Create", "tss_quotationpartheader", new Action<LocalPluginContext>(ExecutePostQuotationPartHeaderCreate)));

            // Note : you can register for more events here if this plugin is not specific to an individual entity and message combination.
            // You may also need to update your RegisterFile.crmregister plug-in registration file to reflect any change.
        }

        /// </remarks>
        protected void ExecutePostQuotationPartHeaderCreate(LocalPluginContext localContext)
        {
            if (localContext == null)
            {
                throw new ArgumentNullException("localContext");
            }

            IPluginExecutionContext context = localContext.PluginExecutionContext;
            Entity postImageEntity = (context.PostEntityImages != null && context.PostEntityImages.Contains(this.postImageAlias)) ? context.PostEntityImages[this.postImageAlias] : null;

            ITracingService tracer = localContext.TracingService;
            // TODO: Implement your custom Plug-in business logic.
            BL_tss_quotationpartheader _BL_tss_quotationpartheader = new BL_tss_quotationpartheader();
            _BL_tss_quotationpartheader.Form_OnCreate_GenerateQuotationId_PostOperation(localContext.OrganizationService, localContext.PluginExecutionContext, tracer);

        }
    }
}
